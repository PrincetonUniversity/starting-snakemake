rule all:
    input:
        "results/princeton.png",
        "results/snakemake.png"

rule analyze_princeton:
    output:
        html="data/princeton.html",
        counts="data/princeton_wordcount.csv",
        plot="results/princeton.png"
    shell:
        """
        # Download page
        curl -o {output.html} https://www.princeton.edu

        # Process text and count words
        cat {output.html} 2>/dev/null | \
        sed 's/<[^>]*>//g' | \
        tr '[:upper:]' '[:lower:]' | \
        tr -cs '[:alpha:]' '\n' | \
        grep -v "^$" | \
        sort | \
        uniq -c | \
        sort -nr | \
        sed 's/^ *//g' | \
        awk '{{print $2 "," $1}}' > {output.counts}

        # Create plot
        python scripts/plot_frequencies.py {output.counts} {output.plot}
        """

rule analyze_snakemake:
    output:
        html="data/snakemake.html",
        counts="data/snakemake_wordcount.csv",
        plot="results/snakemake.png"
    shell:
        """
        # Download page
        curl -o {output.html} https://snakemake.readthedocs.io/en/stable/

        # Process text and count words
        cat {output.html} 2>/dev/null | \
        sed 's/<[^>]*>//g' | \
        tr '[:upper:]' '[:lower:]' | \
        tr -cs '[:alpha:]' '\n' | \
        grep -v "^$" | \
        sort | \
        uniq -c | \
        sort -nr | \
        sed 's/^ *//g' | \
        awk '{{print $2 "," $1}}' > {output.counts}

        # Create plot
        python scripts/plot_frequencies.py {output.counts} {output.plot}
        """