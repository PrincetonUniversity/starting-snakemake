rule all:
    input:
        "results/princeton_bar.png",


rule download_princeton:
    '''Download the raw html from a url.'''
    output:
        html="data/princeton.html",
    params:
        url="https://www.princeton.edu"
    shell:
        'curl -o {output.html} {params.url}'


rule tokenize_princeton:
    '''Given an html, remove html tags and produce one word per line.'''
    input:
        html="data/princeton.html",
    output:
        words="data/princeton_words.txt",
    params:
        sed_command=(
                r'/^ *<script/d ; '  # delete all lines with script tags
                r's/<[^>]*>//g ; '  # remove all remaining tags
                r's/[^a-zA-Z]\+/\n/g'  # replace any non-alphabetical characters with newlines
                )
    shell:
        "sed '{params.sed_command}' {input.html} |"
        "grep -v '^$' "  # remove empty lines
        "> {output.words}"


# TODO: Add in count_princeton rule to create datatable csv
# Input: words="data/princeton_words.txt"
# Output: counts="results/princeton_counts.csv"


rule plot_princeton:
    '''Generate a bar chart of word frequencies from the tabulated counts.'''
    input:
        counts="results/princeton_counts.csv",
    output:
        chart="results/princeton_bar.png",
    run:
        import pandas as pd
        import matplotlib
        matplotlib.use('Agg')
        import matplotlib.pyplot as plt
        df = pd.read_csv(input['counts'])
        ax = df[df.word.str.len() > 4].iloc[:20].plot.bar(x='word', y='count')
        plt.tight_layout()
        ax.figure.savefig(output['chart'])
